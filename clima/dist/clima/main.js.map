{"version":3,"sources":["./src/environments/environment.ts","./src/app/clima/clima.component.html","./src/app/clima/clima.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/app/services/servico.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div class=\"{{this.card}} p-4\">\n    <div class=\"row\">\n        <div class=\"col-8\" id=\"cidade\">\n\n            <ng-template [ngIf]=\"isAvaliable\" [ngIfElse]=\"cidade\">\n                <div>\n                    <p class=\"text-capitalize\"><b>{{this.jsonModel.name}} | {{this.jsonModel.main.temp}} ºC</b></p>\n                </div>\n            </ng-template>\n\n            <ng-template #cidade>\n                <div>\n                    <p><b>Cidade:</b></p>\n                </div>\n            </ng-template>\n        </div>\n        <div class=\"col-4\">\n            <p class=\"bold cursive pramos\">Pramos Metereologia</p>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-12\">\n\n        </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-4 mt-3\">\n\n            <ng-template [ngIf]=\"isAvaliable\" [ngIfElse]=\"imagem\">\n                <div>\n                    <img class=\"imagem-clima-atual\" src=\"https://openweathermap.org/img/w/{{this.jsonModel.weather[0].icon}}.png\" alt=\"Lua\">\n                </div>\n            </ng-template>\n\n            <ng-template #imagem>\n                <div>\n                \n                </div>\n            </ng-template>\n\n            \n        </div>\n        <div class=\"col-8 my-auto\">\n            <!--<p class=\"w-25\"><b>{{this.jsonModel.weather[0].description}}</b></p>-->\n            <ng-template [ngIf]=\"isAvaliable\" [ngIfElse]=\"ceu\">\n                <div>\n                    <p class=\"text-capitalize\"><b>{{this.jsonModel.weather[0].description}}</b></p>\n                </div>\n            </ng-template>\n\n            <ng-template #ceu>\n                <div>\n                    <p><b>Céu:</b></p>\n                </div>\n            </ng-template>\n\n            <ng-template [ngIf]=\"isAvaliable\" [ngIfElse]=\"sensacao\">\n                <div>\n                    <p class=\"text-capitalize\"><b>Sensação térmica: {{this.jsonModel.main.feels_like}} ºC</b></p>\n                </div>\n            </ng-template>\n\n            <ng-template #sensacao>\n                <div>\n                    <p><b>\n                            <p class=\"texto-grande\"><b>Sensação térmica:</b></p>\n                        </b></p>\n                </div>\n            </ng-template>\n\n\n\n        </div>\n    </div>\n\n    <div class=\"row mt-4\">\n        <div class=\"col-6\">\n\n            <ng-template [ngIf]=\"isAvaliable\" [ngIfElse]=\"vento\">\n                <div>\n                    <p class=\"text-capitalize\"><b>Vento: {{this.jsonModel.wind.speed}} Km/h</b></p>\n                </div>\n            </ng-template>\n\n            <ng-template #vento>\n                <div>\n                    <p><b>Vento:</b></p>\n                </div>\n            </ng-template>\n\n        </div>\n        <div class=\"col-6\">\n\n            <ng-template [ngIf]=\"isAvaliable\" [ngIfElse]=\"umidade\">\n                <div>\n                    <p class=\"text-capitalize\"><b>Umidade: {{this.jsonModel.wind.speed}} %</b></p>\n                </div>\n            </ng-template>\n\n            <ng-template #umidade>\n                <div>\n                    <p><b>Umidade:</b></p>\n                </div>\n            </ng-template>\n\n            \n        </div>        \n    </div>\n\n    <div class=\"row mb-4\">\n        <div class=\"col-6\">\n\n            <ng-template [ngIf]=\"isAvaliable\" [ngIfElse]=\"minima\">\n                <div>\n                    <p class=\"text-capitalize\"><b>Mínima: {{this.jsonModel.main.temp_min}} ºC</b></p>\n                </div>\n            </ng-template>\n\n            <ng-template #minima>\n                <div>\n                    <p><b>Mínima:</b></p>\n                </div>\n            </ng-template>\n\n            \n        </div>\n        <div class=\"col-6\">\n            <ng-template [ngIf]=\"isAvaliable\" [ngIfElse]=\"maxima\">\n                <div>\n                    <p class=\"text-capitalize\"><b>Máxima: {{this.jsonModel.main.temp_max}} ºC</b></p>\n                </div>\n            </ng-template>\n\n            <ng-template #maxima>\n                <div>\n                    <p><b>Máxima:</b></p>\n                </div>\n            </ng-template>\n        </div>\n    </div>\n\n    <br>\n    <!-- http://openweathermap.org/img/w/10d.png -->\n    <!--<div class=\"\" ><p>Teste {{ this.jsonModel.name }} </p></div>-->\n\n    <div>\n        <p>Clique no botão para fornecer sua localização em Latitude e Longitude:</p>\n        <button (click)=\"getCoord()\" class=\"btn btn-info\">Clique Aqui</button>\n    </div>\n\n</div>","import { ServicoService } from './../services/servico.service';\nimport { JsonDTO } from './../dto/JsonDTO';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-clima',\n  templateUrl: './clima.component.html',\n  styleUrls: ['./clima.component.css']\n})\nexport class ClimaComponent implements OnInit {\n\n  constructor(private servicoService: ServicoService) {\n\n  }\n\n  jsonModel: JsonDTO;\n  lat: number;\n  lon: number;\n  cont: number;\n  card: string;\n  isAvaliable: boolean;\n\n  ngOnInit() {\n    this.lat = 0;\n    this.lon = 0;\n    this.cont = 0;\n    this.isAvaliable = false;\n    this.card = \"card-clima-menor\";\n    this.getCoord();\n  }\n\n  getCoord() {\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n\n        this.lat = position.coords.latitude;\n        this.lon = position.coords.longitude;\n\n      });\n    }\n    if (this.cont > 0) {\n      this.servicoService.obterClima(this.lat, this.lon).subscribe(data => {\n        this.jsonModel = data;\n        this.isAvaliable = true;\n      });\n      this.card = \"card-clima\";\n    }\n    this.cont++;\n  }\n\n\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'clima';\n}\n","<!doctype html>\n<html lang=\"pt-br\">\n\n<head>\n  <title>Title</title>\n  <!-- Required meta tags -->\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n  <!-- Bootstrap CSS -->\n  <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n    integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossorigin=\"anonymous\">\n</head>\n\n<body class=\"page\">\n  <div class=\"row pt-5\" id=\"primeira\">\n    <div class=\"col-1\"></div>\n    <div class=\"col-10\"><app-clima></app-clima></div>\n    <div class=\"col-1\"></div>\n  </div>\n\n  <div></div>\n\n  <!-- Optional JavaScript -->\n  <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n  <script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\"\n    integrity=\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\"\n    crossorigin=\"anonymous\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\"\n    integrity=\"sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1\"\n    crossorigin=\"anonymous\"></script>\n  <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\"\n    integrity=\"sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM\"\n    crossorigin=\"anonymous\"></script>\n</body>\n\n</html>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ClimaComponent } from './clima/clima.component';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ClimaComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { JsonDTO } from './../dto/JsonDTO';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({ \n  providedIn: 'root'\n})\nexport class ServicoService {\n\n  constructor(private http: HttpClient) { \n    this.weatherAPIKey = require('./APIKey.json').Key;\n  }\n\n  weatherAPIKey: string; \n\n    obterClima(lat: number, lon: number){\n      return this.http.get<JsonDTO>(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&lang=pt_br&units=metric&appid=${this.weatherAPIKey}`);\n    }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}